
package agence.web.service.client;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HotelService", targetNamespace = "http://services.service.web.hotel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HotelService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<agence.web.service.client.Offre>
     * @throws LoginIdentificationBadException_Exception
     * @throws NoRoomFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChambresDispo", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.GetChambresDispo")
    @ResponseWrapper(localName = "getChambresDispoResponse", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.GetChambresDispoResponse")
    @Action(input = "http://services.service.web.hotel/HotelService/getChambresDispoRequest", output = "http://services.service.web.hotel/HotelService/getChambresDispoResponse", fault = {
        @FaultAction(className = NoRoomFoundException_Exception.class, value = "http://services.service.web.hotel/HotelService/getChambresDispo/Fault/NoRoomFoundException"),
        @FaultAction(className = LoginIdentificationBadException_Exception.class, value = "http://services.service.web.hotel/HotelService/getChambresDispo/Fault/LoginIdentificationBadException")
    })
    public List<Offre> getChambresDispo(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        List<Integer> arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        List<Integer> arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4)
        throws LoginIdentificationBadException_Exception, NoRoomFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns agence.web.service.client.Adresse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnHotelAdr", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.ReturnHotelAdr")
    @ResponseWrapper(localName = "returnHotelAdrResponse", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.ReturnHotelAdrResponse")
    @Action(input = "http://services.service.web.hotel/HotelService/returnHotelAdrRequest", output = "http://services.service.web.hotel/HotelService/returnHotelAdrResponse")
    public Adresse returnHotelAdr();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hotelId", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.HotelId")
    @ResponseWrapper(localName = "hotelIdResponse", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.HotelIdResponse")
    @Action(input = "http://services.service.web.hotel/HotelService/hotelIdRequest", output = "http://services.service.web.hotel/HotelService/hotelIdResponse")
    public int hotelId();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hotelNom", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.HotelNom")
    @ResponseWrapper(localName = "hotelNomResponse", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.HotelNomResponse")
    @Action(input = "http://services.service.web.hotel/HotelService/hotelNomRequest", output = "http://services.service.web.hotel/HotelService/hotelNomResponse")
    public String hotelNom();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Connectiontest")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Connectiontest", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.Connectiontest")
    @ResponseWrapper(localName = "ConnectiontestResponse", targetNamespace = "http://services.service.web.hotel/", className = "agence.web.service.client.ConnectiontestResponse")
    @Action(input = "http://services.service.web.hotel/HotelService/ConnectiontestRequest", output = "http://services.service.web.hotel/HotelService/ConnectiontestResponse")
    public String connectiontest(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
